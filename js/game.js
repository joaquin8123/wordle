window.onload = function () {
  const form = document.getElementById('form');
  document.getElementById('timer').innerHTML = 05 + ':' + 00

  // INICIALIZA EL TIMER

  form.addEventListener("submit", (e) => {
    e.preventDefault();
    startTimer();
    modal.style.display = "block";

  });

  function startTimer() {
    var presentTime = document.getElementById('timer').innerHTML;
    var timeArray = presentTime.split(/[:]+/);
    var m = timeArray[0];
    var s = checkSecond((timeArray[1] - 1));
    if (s == 59) { m = m - 1 }
    if (m < 0) {
      return

    }
    if (m == 0 & s == 0) {
      alert("Termino el tiempo") //ACA ACTIVARIA EL MODAL
    }


    document.getElementById('timer').innerHTML =
      m + ":" + s;

    setTimeout(startTimer, 1000);
  }

  function checkSecond(sec) {
    if (sec < 10 && sec >= 0) { sec = "0" + sec }; // add zero in front of numbers < 10
    if (sec < 0) { sec = "59" };
    return sec;
  }

  /* MODAL */
  const modal = document.getElementById("myModalJuego");
  var span = document.getElementsByClassName("close")[0];

  // abrir modal
  span.onclick = function () {
    modal.style.display = "block";
  }


  // Cerrar modal
  span.onclick = function () {
    modal.style.display = "none";
  }

  // close modal, click fuera
  window.onclick = function (event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  }
}

// Objeto con constantes de los colores
let colores = {
  VERDE: 1,
  AMARILLO: 2,
  GRIS: 3,
  BLANCO: 0
}

// matriz del tablero
let tablaColores = [
  [0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0]
]


// Recorre la tabla y la pinta segÃºn corresponda.
function pintaTabla() {
  for (let iFila = 0; iFila < 6; iFila++) {
    for (let iCol = 0; iCol < 5; iCol++) {
      let input = document.getElementById(`f${iFila}c${iCol}`)
      switch (tablaColores[iFila][iCol]) {
        case colores.VERDE:
          input.classList.add("verde");
          break;
        case colores.AMARILLO:
          input.classList.add("amarillo");
          break;
        case colores.GRIS:
          input.classList.add("gris");
          break;
        case colores.BLANCO:
          input.classList.add("blanco");
          break;
      }
    }
  }
}

// Tabla para cargar las respuestas que va dando el usuario.
let respuestas = [
  [],
  [],
  [],
  [],
  [],
  [],
]

// Guardar el progreso del usuario en el LocalStorage.
function GuardaProgreso() {
  let save = {};

  save.fecha = new Date().toLocaleString("es-AR", { timeZone: "America/Argentina/Mendoza" });
  save.tiempo = document.querySelector("#time").innerHTML;
  save.respuestas = respuestas;
  save.usuario = document.getElementById("nombre-jugador-input").value;
  save.palabraGanadora = palabraGanadora;
  save.tablaColores = tablaColores;

  let savesArray = JSON.parse(localStorage.getItem("saves")) || [];
  savesArray.push(save);

  let savesArrayJSON = JSON.stringify(savesArray);

  localStorage.setItem("saves", savesArrayJSON);

  window.location.href = "index.html";
}

// Traerme todas las partidas guardadas desde LocalStorage
function ObtenerGuardadas() {

  let savesArray = JSON.parse(localStorage.getItem('saves')) || [];
  let body = "";
  let partida = savesArray.length + 1;
  for (let i = savesArray.length - 1; i >= 0; i--) {
    partida--;
    body += `<tr class="fila-partidas-guardadas" onclick=loadGame('${i}') role="row">
                    <td class="data-partida-guardadas" data-label="PARTIDA">${partida}</td>
                    <td class="data-partida-guardadas" data-label="NOMBRE">${(savesArray[i].usuario)}</td>
                    <td class="data-partida-guardadas" data-label="FECHA">${(savesArray[i].fecha)}</td>
                </tr>`
  }
  document.getElementById("puntajes").innerHTML = body;
}

// Cargar una partida
const loadGame = function (i) {
  gameOver = false;
  let modal = document.getElementById("modalPartidas");
  modal.style.display = "none";

  for (let i = 0; i < 6; i++) {
    let fieldset = document.getElementById(`fila${i}`);
    fieldset.disabled = false;
  }

  let savesArray = JSON.parse(localStorage.getItem('saves'));
  let actualArray = savesArray[i].respuestas;
  let actualPalabra = savesArray[i].palabraGanadora;
  let actualTiempo = savesArray[i].tiempo
  let actualUsuario = savesArray[i].usuario;
  let actualTablaColores = savesArray[i].tablaColores;
  colorTablero = actualTablaColores;

  pintaTabla();

  palabraGanadora = actualPalabra;
  document.querySelector("#time").innerHTML = actualTiempo;
  document.getElementById("nombre-jugador-input").value = actualUsuario;


  for (let iFila = 0; iFila < 6; iFila++) {
    for (let iCol = 0; iCol < 5; iCol++) {
      let input = document.getElementById(`f${iFila}c${iCol}`);
      if (actualArray[iFila][iCol] !== undefined) {
        input.value = actualArray[iFila][iCol];
      }
    }
  }

  // Muestro datos varios de la partida guardada
  console.log("Datos partida guardada")
  console.log("Palabra: ", actualPalabra);
  console.log("Fecha: ", actualTiempo);
  console.log("Usuario: ", actualUsuario);

  hideBtn();

  //Calculos varios tiempo
  let sec = actualTiempo.slice(5);
  let min = actualTiempo.slice(0, 2);
  let secTransform = Math.round((sec / 60) * 100);
  let calculoTiempo = Math.round(((min + secTransform) / 100) * 60);
  let timer = calculoTiempo;
  display = document.querySelector("#time");
  startTimer(timer, display);



  function guardaRespPartidaCargada(i) {
    for (let iCol = 0; iCol < 5; iCol++) {
      let input = document.getElementById(`f${i}c${iCol}`).value;
      respuestas[i].push(input);
    }
    revisaResulPartidaCargada(respuestas[i], i);
  }

  function revisaResulPartidaCargada(respuesta, i) {
    respuesta.forEach(function (elemento, index) {
      if (elemento.toLowerCase() === arrayActualPalabra[index]) {
        tablaColores[i][index] = colores.VERDE;
      }
      else if (arrayActualPalabra.includes(elemento.toLowerCase())) {
        tablaColores[i][index] = colores.AMARILLO;
      }
      else if (!arrayActualPalabra.includes(elemento.toLowerCase())) {
        tablaColores[i][index] = colores.GRIS;
      }
    })
    pintaTabla();
  }

  arrayActualPalabra = actualPalabra.split("");


  //Guardo la respuesta de la partida solo de las filas con letras.
  for (let i = 0; i < 6; i++) {
    let fieldset = document.getElementById(`fila${i}`);
    let validaLetra = document.querySelectorAll(`#fila${i} input`);

    let valor0 = validaLetra[0].value;
    let valor1 = validaLetra[1].value;
    let valor2 = validaLetra[2].value;
    let valor3 = validaLetra[3].value;
    let valor4 = validaLetra[4].value;

    if (valor0 !== "" && valor1 !== "" && valor2 !== "" && valor3 !== "" && valor4 !== "") {
      guardaRespPartidaCargada(i);
      fieldset.disabled = true;
    }
    if (valor0 == "") {
      validaLetra[0].focus();
      break
    }
  }

  //Funcion para jugar con una partida cargada.
  for (let i = 0; i < 6; i++) {
    let fieldset = document.getElementById(`fila${i}`);
    fieldset.onkeydown = function (event) {
      if (event.key === `Enter`) {
        let validaLetra = document.querySelectorAll(`#fila${i} input`);
        let valor0 = validaLetra[0].value;
        let valor1 = validaLetra[1].value;
        let valor2 = validaLetra[2].value;
        let valor3 = validaLetra[3].value;
        let valor4 = validaLetra[4].value;


        if (valor0 == "" || valor1 == "" || valor2 == "" || valor3 == "" || valor4 == "") {
          return
        }
        else if (valor0.length > 1 || valor1.length > 1 || valor2.length > 1 || valor3.length > 1 || valor4.length > 1) {
          return
        }
        else {
          guardaRespPartidaCargada(i);

          let respuestaUsuario = respuestas[i];
          let respuestaUsuarioString = respuestaUsuario.join("").toLowerCase();
          
          if (respuestaUsuarioString == palabraGanadora) {
            gameOver = true;
            showBtn();
            document.getElementById("mensaje-resultado").style.color = "#000000";
            document.getElementById("mensaje-resultado").innerHTML = "Te felicito! Ganaste la partida!";
            scorePartidaGanada(i); // Guardamos los datos de la partida con el puntaje
            bloqueoFieldset();
          }

          if (i == 0 && respuestaUsuarioString != palabraGanadora) {
            document.getElementById("fila1").disabled = false;
            document.getElementById("fila0").disabled = true;
            document.getElementById("f1c0").focus();
          }
          if (i == 1 && respuestaUsuarioString != palabraGanadora) {
            document.getElementById("fila2").disabled = false;
            document.getElementById("fila1").disabled = true;
            document.getElementById("f2c0").focus();
          }
          if (i == 2 && respuestaUsuarioString != palabraGanadora) {
            document.getElementById("fila3").disabled = false;
            document.getElementById("fila2").disabled = true;
            document.getElementById("f3c0").focus();
          }
          if (i == 3 && respuestaUsuarioString != palabraGanadora) {
            document.getElementById("fila4").disabled = false;
            document.getElementById("fila3").disabled = true;
            document.getElementById("f4c0").focus();
          }
          if (i == 4 && respuestaUsuarioString != palabraGanadora) {
            document.getElementById("fila5").disabled = false;
            document.getElementById("fila4").disabled = true;
            document.getElementById("f5c0").focus();
          }
          if (i == 5 && respuestaUsuarioString != palabraGanadora) {
            gameOver = true;
            showBtn();
            document.getElementById("mensaje-resultado").innerHTML = `Perdiste. No quedan mas intentos. La palabra era: "${palabraGanadora}"`;
            bloqueoFieldset();
          }
        }
      }
    }
  }
}


//Setear puntaje
function scorePartidaGanada(fila) {

  let puntaje = {};

  puntaje.fecha = new Date().toLocaleString("es-AR", { timeZone: "America/Argentina/Buenos_Aires" });
  puntaje.nombre = document.getElementById("nombre-jugador-input").value;

  //calcular puntaje
  switch (fila) {
    case 0:
      puntaje.puntaje = 150
      break;

    case 1:
      puntaje.puntaje = 100
      break;

    case 2:
      puntaje.puntaje = 80
      break;

    case 3:
      puntaje.puntaje = 60
      break;

    case 4:
      puntaje.puntaje = 30
      break;

    case 5:
      puntaje.puntaje = 10
      break;

    default:
      break;
  }

  //Traigo del localStorage el array "puntajes", si no esta le asigno "[]"
  let puntajesArray = JSON.parse(localStorage.getItem("puntajes")) || [];
  puntajesArray.push(puntaje);

  //Convierto mi array de puntajes a json
  let puntajeArrayJSON = JSON.stringify(puntajesArray);

  //Guardo mi array de puntajes en formato JSON en el local storage
  localStorage.setItem("puntajes", puntajeArrayJSON);

}

//Obtener puntajes. 
function ObtenerScore() {
  let puntajesArray = JSON.parse(localStorage.getItem("puntajes")) || [];
  let body = "";
  for (let i = 0; i < puntajesArray.length; i++) {
    body += `<tr role="row">
                        <td data-label="NOMBRE">${(puntajesArray[puntajesArray.length - 1 - i].nombre)}</td>
                        <td data-label="FECHA">${(puntajesArray[puntajesArray.length - 1 - i].fecha)}</td>
                        <td data-label="PUNTAJE">${(puntajesArray[puntajesArray.length - 1 - i].puntaje)}</td>
                    </tr>`
  }
  document.getElementById("puntajes").innerHTML = body;
}

// Ordenar puntajes
function ordenaTablaP() { 
  let puntajesArray = JSON.parse(localStorage.getItem('puntajes')) || [];
  puntajesArray.sort(function (a, b) {
    if (a.puntaje > b.puntaje) {
      return 1;
    }
    if (a.puntaje < b.puntaje) {
      return -1;
    }
    return 0;
  });

  //Muestro la lista de puntajes ordenado por puntaje
  let body = '';
  for (let i = 0; i < puntajesArray.length; i++) {
    body += `<tr role="row">
                        <td data-label="NOMBRE">${(puntajesArray[puntajesArray.length - 1 - i].nombre)}</td>
                        <td data-label="FECHA">${(puntajesArray[puntajesArray.length - 1 - i].fecha)}</td>
                        <td data-label="PUNTAJE">${(puntajesArray[puntajesArray.length - 1 - i].puntaje)}</td>
                    </tr>`
  }
  document.getElementById('puntajes').innerHTML = body;
}


let gameOver = false;

function bloqueoFieldset() {
  for (let i = 0; i < 6; i++) {
    let fieldset = document.getElementById(`fila${i}`);
    if (gameOver);
    fieldset.disabled = true;
  }
}

// INICIO DEL JUEGO

function inicio() {
  for (let i = 0; i < 6; i++) {
    let fieldset = document.getElementById(`fila${i}`);
    fieldset.onkeydown = function (event) {
      if (event.key === `Enter`) {
        let validaLetra = document.querySelectorAll(`#fila${i} input`);
        let valor0 = validaLetra[0].value;
        let valor1 = validaLetra[1].value;
        let valor2 = validaLetra[2].value;
        let valor3 = validaLetra[3].value;
        let valor4 = validaLetra[4].value;

        if (valor0 == "" || valor1 == "" || valor2 == "" || valor3 == "" || valor4 == "") {
          return 
        } else if (valor0.length > 1 || valor1.length > 1 || valor2.length > 1 || valor3.length > 1 || valor4.length > 1) {
          return
        }else {
          guardaResp(i);
          setTablaColores(respuestas[i], i)
          pintaTabla()
          let respUserString =  respuestas[i].join("").toLowerCase();
          if (respUserString == palabraGanadora) {
            gameOver = true;
            showBtn();
            document.getElementById("mensaje-resultado").style.color = "#000000";
            document.getElementById("mensaje-resultado").innerHTML = "Ganaste la partida";
            scorePartidaGanada(i);
            bloqueoFieldset();
          }

          if (i == 0 && respUserString != palabraGanadora) {
            document.getElementById("fila1").disabled = false;
            document.getElementById("fila0").disabled = true;
            document.getElementById("f1c0").focus();
          }
          if (i == 1 && respUserString != palabraGanadora) {
            document.getElementById("fila2").disabled = false;
            document.getElementById("fila1").disabled = true;
            document.getElementById("f2c0").focus();
          }
          if (i == 2 && respUserString != palabraGanadora) {
            document.getElementById("fila3").disabled = false;
            document.getElementById("fila2").disabled = true;
            document.getElementById("f3c0").focus();
          }
          if (i == 3 && respUserString != palabraGanadora) {
            document.getElementById("fila4").disabled = false;
            document.getElementById("fila3").disabled = true;
            document.getElementById("f4c0").focus();
          }
          if (i == 4 && respUserString != palabraGanadora) {
            document.getElementById("fila5").disabled = false;
            document.getElementById("fila4").disabled = true;
            document.getElementById("f5c0").focus();
          }
          if (i == 5 && respUserString != palabraGanadora) {
            gameOver = true;
            showBtn();
            document.getElementById("mensaje-resultado").innerHTML = `Perdiste. La palabra era: "${palabraGanadora}"`;
            bloqueoFieldset();
          }
        }
      }
    }
  }
}

// Guardar respuesta
function guardaResp(i) {
  for (let iCol = 0; iCol < 5; iCol++) {
    let input = document.getElementById(`f${i}c${iCol}`).value;
    respuestas[i].push(input);
  }
}

// Setear tabla de colores
function setTablaColores(respuesta, i) {
  respuesta.forEach(function (elemento, index) {
    if (elemento.toLowerCase() === arrayPalabraGanadora[index]) {
      tablaColores[i][index] = colores.VERDE;
    }
    else if (arrayPalabraGanadora.includes(elemento.toLowerCase())) {
      tablaColores[i][index] = colores.AMARILLO;
    }
    else if (!arrayPalabraGanadora.includes(elemento.toLowerCase())) {
      tablaColores[i][index] = colores.GRIS;
    }
  })
}

// Lista de palabras
const listaPalabras = [
    'aboyÃ¡',
    'aboya',
    'abran',
    'abras',
    'abrÃ¡s',
    'abrÃ­a',
    'acles',
    'acoja',
    'acojo',
    'acres',
    'actas',
    'actos',
    'actÃºo',
    'acuna',
    'acune',
    'acuno',
    'acunÃ¡',
    'acunÃ©',
    'acunÃ³',
    'acuso',
    'acusÃ³',
    'acuÃ±a',
    'acuÃ±e',
    'acuÃ±o',
    'acuÃ±Ã¡',
    'acuÃ±Ã©',
    'acuÃ±Ã³',
    'afeas',
    'afeÃ¡s',
    'aguda',
    'agudo',
    'alajÃº',
    'Aland',
    'albas',
    'albos',
    'alces',
    'alcÃ©s',
    'aleja',
    'alejÃ¡',
    'algas',
    'aliÃ¡s',
    'almas',
    'alojo',
    'alojÃ¡',
    'alojÃ³',
    'altas',
    'altos',
    'alÃ­as',
    'amina',
    'aminÃ¡',
    'ancas',
    'andas',
    'andes',
    'andÃ©s',
    'anima',
    'animo',
    'animÃ¡',
    'animÃ³',
    'aojar',
    'aojas',
    'aojos',
    'aojÃ¡s',
    'apees',
    'apeÃ©s',
    'apoda',
    'apodo',
    'apodÃ¡',
    'apodÃ³',
    'aptas',
    'aptÃ¡s',
    'apurÃ©',
    'arces',
    'arcos',
    'ardan',
    'ardas',
    'ardes',
    'ardÃ¡s',
    'ardÃ©s',
    'arias',
    'arios',
    'arlas',
    'arlos',
    'arlÃ¡s',
    'armes',
    'armÃ©s',
    'arpas',
    'artes',
    'Aruba',
    'aruÃ±e',
    'aruÃ±o',
    'aruÃ±Ã©',
    'aruÃ±Ã³',
    'arÃ©is',
    'asate',
    'ascos',
    'asees',
    'aseos',
    'asida',
    'asido',
    'asilÃ³',
    'asirÃ©',
    'asnos',
    'asolo',
    'aspee',
    'aspeÃ©',
    'asÃ©is',
    'asÃ­an',
    'asÃ­as',
    'atoja',
    'atojo',
    'atojÃ¡',
    'atojÃ³',
    'autos',
    'avale',
    'avara',
    'ayudÃ¡',
    'azotÃ©',
    'aÃ©rea',
    'aÃ±oro',
    'aÃ±orÃ³',
    'bacÃ¡n',
    'bagas',
    'bagÃ¡s',
    'bajas',
    'bajes',
    'bajos',
    'bajÃ¡s',
    'bajÃ©s',
    'balas',
    'bales',
    'balÃ¡s',
    'balÃ©s',
    'bares',
    'barre',
    'barrÃ¡',
    'barrÃ©',
    'basca',
    'bascÃ¡',
    'baste',
    'bastÃ¡',
    'bastÃ©',
    'batas',
    'bates',
    'bateÃ¡',
    'batÃ¡s',
    'batÃ­s',
    'bayas',
    'baÃ±as',
    'baÃ±es',
    'BaÃ±os',
    'baÃ±os',
    'baÃ±Ã©s',
    'bebed',
    'bebes',
    'bebÃ©s',
    'BenÃ­n',
    'besen',
    'beses',
    'besos',
    'besÃ©s',
    'betas',
    'bodas',
    'bogad',
    'bogas',
    'bogue',
    'boguÃ©',
    'bogÃ¡s',
    'bojar',
    'bojas',
    'bojos',
    'bojÃ¡s',
    'bolar',
    'bollÃ¡',
    'bondi',
    'bonos',
    'borre',
    'borrÃ©',
    'boses',
    'bosÃ©s',
    'botad',
    'botan',
    'botas',
    'boten',
    'botes',
    'botÃ¡s',
    'botÃ©s',
    'boyas',
    'boyÃ¡s',
    'bozos',
    'bramo',
    'bramÃ³',
    'Bruno',
    'bruta',
    'bruÃ±o',
    'bruÃ±Ã³',
    'brÃ­os',
    'bulas',
    'bulos',
    'buscÃ¡',
    'bacÃ¡n',
    'bagas',
    'bagÃ¡s',
    'bajas',
    'bajes',
    'bajos',
    'bajÃ¡s',
    'bajÃ©s',
    'balas',
    'bales',
    'balÃ¡s',
    'balÃ©s',
    'bares',
    'barre',
    'barrÃ¡',
    'barrÃ©',
    'basca',
    'bascÃ¡',
    'baste',
    'bastÃ¡',
    'bastÃ©',
    'batas',
    'bates',
    'bateÃ¡',
    'batÃ¡s',
    'batÃ­s',
    'bayas',
    'baÃ±as',
    'baÃ±es',
    'BaÃ±os',
    'baÃ±os',
    'baÃ±Ã©s',
    'bebed',
    'bebes',
    'bebÃ©s',
    'BenÃ­n',
    'besen',
    'beses',
    'besos',
    'besÃ©s',
    'betas',
    'bodas',
    'bogad',
    'bogas',
    'bogue',
    'boguÃ©',
    'bogÃ¡s',
    'bojar',
    'bojas',
    'bojos',
    'bojÃ¡s',
    'bolar',
    'bollÃ¡',
    'bondi',
    'bonos',
    'borre',
    'borrÃ©',
    'boses',
    'bosÃ©s',
    'botad',
    'botan',
    'botas',
    'boten',
    'botes',
    'botÃ¡s',
    'botÃ©s',
    'boyas',
    'boyÃ¡s',
    'bozos',
    'bramo',
    'bramÃ³',
    'Bruno',
    'bruta',
    'bruÃ±o',
    'bruÃ±Ã³',
    'brÃ­os',
    'bulas',
    'bulos',
    'buscÃ¡',
    'buscÃ³',
    'buses',
    'ButÃ¡n',
    'cabrÃ¡',
    'caceo',
    'caces',
    'cachÃ³',
    'cacÃ©s',
    'cafÃ©s',
    'cagas',
    'cagÃ¡s',
    'cajas',
    'calce',
    'calcÃ©',
    'calcÃ³',
    'cales',
    'callo',
    'callÃ³',
    'calme',
    'calmo',
    'calmÃ©',
    'calmÃ³',
    'calÃ©s',
    'campÃ³',
    'canas',
    'canes',
    'cansa',
    'cansÃ¡',
    'canta',
    'cantÃ³',
    'capas',
    'capen',
    'capes',
    'cappa',
    'capta',
    'capto',
    'captÃ¡',
    'captÃ³',
    'capÃ¡s',
    'capÃ©s',
    'cargÃ¡',
    'cargÃ³',
    'Carla',
    'caros',
    'casad',
    'casan',
    'casas',
    'casca',
    'cascÃ¡',
    'cascÃ³',
    'casen',
    'cases',
    'casos',
    'casÃ¡s',
    'casÃ©s',
    'Catar',
    'catas',
    'catÃ¡s',
    'cause',
    'causÃ©',
    'cavas',
    'cavos',
    'cazad',
    'cazan',
    'cazas',
    'cazos',
    'caÃ­da',
    'caÃ­do',
    'caÃ±as',
    'caÃ±eo',
    'caÃ±Ã¡s',
    'caÃ±Ã­s',
    'cebos',
    'cedan',
    'cedas',
    'ceded',
    'ceden',
    'cedes',
    'cedÃ¡s',
    'cedÃ©s',
    'cefos',
    'cejas',
    'cejÃ¡s',
    'celes',
    'Celia',
    'celta',
    'cenas',
    'cepas',
    'ceras',
    'cercÃ¡',
    'cercÃ³',
    'cerdo',
    'ceros',
    'cerrÃ¡',
    'cerrÃ³',
    'chefs',
    'Chile',
    'China',
    'chiÃ­s',
    'chocÃ³',
    'chuzÃ¡',
    'ciega',
    'cimas',
    'cimÃ¡s',
    'cines',
    'citas',
    'citÃ¡s',
    'clamo',
    'clamÃ³',
    'Clara',
    'clava',
    'clavÃ¡',
    'clavÃ©',
    'clavÃ³',
    'clubs',
    'coces',
    'cocÃ©s',
    'codeo',
    'codos',
    'coged',
    'cogen',

    'cabrÃ¡',
    'caceo',
    'caces',
    'cachÃ³',
    'cacÃ©s',
    'cafÃ©s',
    'cagas',
    'cagÃ¡s',
    'cajas',
    'calce',
    'calcÃ©',
    'calcÃ³',
    'cales',
    'callo',
    'callÃ³',
    'calme',
    'calmo',
    'calmÃ©',
    'calmÃ³',
    'calÃ©s',
    'campÃ³',
    'canas',
    'canes',
    'cansa',
    'cansÃ¡',
    'canta',
    'cantÃ³',
    'capas',
    'capen',
    'capes',
    'cappa',
    'capta',
    'capto',
    'captÃ¡',
    'captÃ³',
    'capÃ¡s',
    'capÃ©s',
    'cargÃ¡',
    'cargÃ³',
    'Carla',
    'caros',
    'casad',
    'casan',
    'casas',
    'casca',
    'cascÃ¡',
    'cascÃ³',
    'casen',
    'cases',
    'casos',
    'casÃ¡s',
    'casÃ©s',
    'Catar',
    'catas',
    'catÃ¡s',
    'cause',
    'causÃ©',
    'cavas',
    'cavos',
    'cazad',
    'cazan',
    'cazas',
    'cazos',
    'caÃ­da',
    'caÃ­do',
    'caÃ±as',
    'caÃ±eo',
    'caÃ±Ã¡s',
    'caÃ±Ã­s',
    'cebos',
    'cedan',
    'cedas',
    'ceded',
    'ceden',
    'cedes',
    'cedÃ¡s',
    'cedÃ©s',
    'cefos',
    'cejas',
    'cejÃ¡s',
    'celes',
    'Celia',
    'celta',
    'cenas',
    'cepas',
    'ceras',
    'cercÃ¡',
    'cercÃ³',
    'cerdo',
    'ceros',
    'cerrÃ¡',
    'cerrÃ³',
    'chefs',
    'Chile',
    'China',
    'chiÃ­s',
    'chocÃ³',
    'chuzÃ¡',
    'ciega',
    'cimas',
    'cimÃ¡s',
    'cines',
    'citas',
    'citÃ¡s',
    'clamo',
    'clamÃ³',
    'Clara',
    'clava',
    'clavÃ¡',
    'clavÃ©',
    'clavÃ³',
    'clubs',
    'coces',
    'cocÃ©s',
    'codeo',
    'codos',
    'coged',
    'cogen',
    'coger',
    'coges',
    'cogÃ©s',
    'cogÃ­a',
    'cojan',
    'cojas',
    'cojos',
    'cojÃ¡s',
    'colas',
    'coles',
    'colma',
    'colmÃ¡',
    'colÃ¡s',
    'colÃ³n',
    'coman',
    'comas',
    'combÃ³',
    'comed',
    'comes',
    'comÃ¡s',
    'comÃ©s',
    'conos',
    'copas',
    'copos',
    'copta',
    'copÃ¡s',
    'coral',
    'coras',
    'Corea',
    'corea',
    'coreÃ¡',
    'corra',
    'corre',
    'corro',
    'corrÃ©',
    'corrÃ­',
    'corsa',
    'cosas',
    'coses',
    'costÃ³',
    'cosÃ¡s',
    'cosÃ©s',
    'coÃ±os',
    'crasa',
    'creas',
    'crees',
    'creme',
    'cremo',
    'cremÃ©',
    'cremÃ³',
    'creÃ©s',
    'croar',
    'cruje',
    'crÃ­en',
    'cubas',
    'cubos',
    'cucas',
    'cucos',
    'cucÃ¡s',
    'cuida',
    'cuide',
    'cuidÃ¡',
    'cuidÃ©',
    'culos',
    'culta',
    'cunas',
    'cunÃ¡s',
    'cupos',
    'cural',
    'curas',
    'curdo',
    'cures',
    'curio',
    'currÃ³',
    'cursÃ³',
    'curÃ¡s',
    'curÃ©s',
    'cuÃ±as',
    'cuÃ±Ã¡s',
    'dados',
    'dagas',
    'dance',
    'dados',
    'dagas',
    'dance',
    'dancÃ©',
    'datos',
    'daÃ±es',
    'daÃ±os',
    'daÃ±Ã©s',
    'debas',
    'debed',
    'deben',
    'debes',
    'debÃ©s',
    'dedos',
    'dejas',
    'dejÃ¡s',
    'densa',
    'dices',
    'dijes',
    'diles',
    'divas',
    'divos',
    'doblÃ©',
    'dolos',
    'doman',
    'domas',
    'domes',
    'domos',
    'domÃ¡s',
    'domÃ©s',
    'donan',
    'donas',
    'donen',
    'dones',
    'donÃ¡s',
    'donÃ©s',
    'dores',
    'doria',
    'dorio',
    'dotas',
    'dotes',
    'dotÃ¡s',
    'dotÃ©s',
    'doÃ±as',
    'drupa',
    'Dubai',
    'DubÃ¡i',
    'dudan',
    'dunas',
    'dures',
    'duros',
    'durÃ©s',
    'dÃºhos',
    'echas',
    'eches',
    'echos',
    'echÃ©s',
    'edita',
    'editÃ¡',
    'eleve',
    'elevÃ©',
    'ellos',
    'emana',
    'emanÃ¡',
    'emoji',
    'emoyi',
    'emula',
    'emule',
    'emulo',
    'emulÃ¡',
    'emulÃ©',
    'emulÃ³',
    'emÃºes',
    'enoja',
    'enojo',
    'enojÃ¡',
    'entes',
    'envÃ­o',
    'erizo',
    'errar',
    'erres',
    'errÃ©s',
    'espiÃ¡',
    'estad',
    'estas',
    'euros',
    'evita',
    'evitÃ¡',
    'falle',
    'fallÃ©',
    'falos',
    'faltÃ¡',
    'ferio',
    'fetos',
    'ficad',
    'ficas',
    'ficÃ¡s',
    'fijas',
    'fijÃ¡s',
    'filas',
    'files',
    'filÃ¡s',
    'finco',
    'fincÃ³',
    'fines',
    'fique',
    'fiquÃ©',
    'firmÃ©',
    'focos',
    'folia',
    'foliÃ¡',
    'folla',
    'follo',
    'follÃ³',
    'fomes',
    'forcÃ©',
    'forme',
    'formo',
    'formÃ¡',
    'formÃ©',
    'formÃ³',
    'fosos',
    'fotos',
    'Frida',
    'frita',
    'fritÃ¡',
    'frÃ­as',
    'fugas',
    'fugue',
    'fuguÃ©',
    'fugÃ¡s',
    'fumes',
    'fumÃ©s',
    'fÃºsil',
    'GabÃ³n',
    'gafas',
    'galas',
    'Gales',
    'Galia',
    'galos',
    'ganes',
    'ganÃ¡s',
    'ganÃ©s',
    'gases',
    'gastÃ³',
    'gatos',
    'genes',
    'Ghana',
    'gimen',
    'gimes',
    'giras',
    'giros',
    'girÃ¡s',
    'godas',
    'godos',
    'goles',
    'gorda',
    'gorra',
    'grabe',
    'grabÃ©',
    'grave',
    'gravÃ©',
    'grite',
    'gritÃ¡',
    'gritÃ©',
    'gritÃ³',
    'groar',
    'grÃºas',
    'gurÃºs',
    'gÃ¼era',
    'habas',
    'habed',
    'hablÃ¡',
    'habrÃ¡',
    'habrÃ©',
    'habÃ­a',
    'hacen',
    'haces',
    'hacÃ©s',
    'hacÃ­a',
    'hagan',
    'hagas',
    'hagÃ¡s',
    'HaitÃ­',
    'halan',
    'halas',
    'hallo',
    'hallÃ¡',
    'halos',
    'halÃ¡s',
    'harte',
    'harÃ¡n',
    'harÃ¡s',
    'harÃ­a',
    'hayan',
    'hayas',
    'hayÃ¡s',
    'heces',
    'hecha',
    'hecho',
    'hemos',
    'hiero',
    'higos',
    'hijas',
    'hijos',
    'hilan',
    'hilos',
    'hinca',
    'hinco',
    'hincÃ³',
    'hipos',
    'hitos',
    'hoces',
    'hocÃ©s',
    'hojas',
    'horne',
    'hornÃ©',
    'huera',
    'huero',
    'hunas',
    'hunos',
    'hurgo',
    'husos',
    'ibais',
    'ideas',
    'ideÃ¡s',
    'iglÃºs',
    'India',
    'infle',
    'inflÃ©',
    'intis',
    'irÃ©is',
    'irÃ­an',
    'irÃ­as',
    'isbas',
    'islas',
    'Ivana',
    'Jabes',
    'jadee',
    'jades',
    'jadeÃ©',
    'jalan',
    'jalÃ³n',
    'JapÃ³n',
    'jefes',
    'jemal',
    'jemes',
    'jerga',
    'jodas',
    'jodes',
    'jodÃ¡s',
    'jodÃ©s',
    'jonia',
    'joyas',
    'joyel',
    'jugos',
    'jujeo',
    'Julio',
    'jures',
    'jurÃ©s',
    'kanes',
    'Kenia',
    'kunas',
    'kurda',
    'labes',
    'labia',
    'labre',
    'labrÃ©',
    'lacra',
    'lacta',
    'lactÃ¡',
    'lados',
    'ladro',
    'ladrÃ³',
    'Lagos',
    'lagos',
    'lamas',
    'lamen',
    'lames',
    'lamiÃ³',
    'lamÃ¡s',
    'lamÃ©s',
    'lancÃ©',
    'lapas',
    'larga',
    'latas',
    'latÃ¡s',
    'laves',
    'lavÃ©s',
    'laxas',
    'laxos',
    'laxÃ¡s',
    'lazan',
    'lazos',
    'legas',
    'legos',
    'lejos',
    'lemas',
    'lenta',
    'levas',
    'leves',
    'levÃ¡s',
    'levÃ©s',
    'leyes',
    'leÃ­as',
    'Libia',
    'libia',
    'librÃ©',
    'librÃ³',
    'licua',
    'licuÃ¡',
    'licÃºa',
    'lides',
    'limas',
    'linda',
    'liras',
    'lises',
    'locas',
    'locha',
    'locos',
    'locus',
    'logrÃ³',
    'lomos',
    'lores',
    'loros',
    'losas',
    'losÃ¡s',
    'loteo',
    'lotes',
    'lozas',
    'luces',
    'luche',
    'lucho',
    'luchÃ¡',
    'luchÃ©',
    'luchÃ³',
    'lunas',
    'lusas',
    'lusos',
    'Macao',
    'maceo',
    'magos',
    'Maine',
    'malas',
    'males',
    'malos',
    'Malta',
    'malÃ­s',
    'mamas',
    'mamÃ¡s',
    'manas',
    'manca',
    'mancÃ¡',
    'mancÃ³',
    'manda',
    'mandÃ³',
    'mangÃ³',
    'manos',
    'manÃ¡s',
    'mapas',
    'marcÃ³',
    'mares',
    'marro',
    'MarÃ­n',
    'masco',
    'mascÃ³',
    'mases',
    'matas',
    'mates',
    'matÃ¡s',
    'matÃ©s',
    'mayas',
    'mayÃ¡s',
    'mazos',
    'maÃ±as',
    'meaba',
    'mecen',
    'meces',
    'mecÃ©s',
    'mediÃ¡',
    'memes',
    'menes',
    'mentÃ¡',
    'menÃ©s',
    'menÃºs',
    'meras',
    'merco',
    'mercÃ³',
    'meros',
    'merÃ¡s',
    'mesas',
    'mesen',
    'meses',
    'mesÃ¡s',
    'mesÃ©s',
    'metas',
    'metes',
    'metÃ¡s',
    'mezas',
    'mezÃ¡s',
    'micas',
    'midas',
    'midÃ¡s',
    'migro',
    'miles',
    'minas',
    'mines',
    'Minsk',
    'minÃ¡s',
    'minÃ©s',
    'miras',
    'miren',
    'mires',
    'mirÃ¡s',
    'mirÃ©s',
    'misad',
    'misas',
    'misma',
    'mista',
    'mistÃ¡',
    'misÃ¡s',
    'mitos',
    'mitro',
    'mitrÃ³',
    'mocos',
    'modas',
    'modos',
    'mofas',
    'mofes',
    'mofÃ¡s',
    'mofÃ©s',
    'mojan',
    'mojar',
    'mojas',
    'mojen',
    'mojos',
    'mojÃ¡s',
    'molas',
    'moles',
    'molÃ¡s',
    'molÃ©s',
    'monas',
    'monos',
    'montÃ©',
    'montÃ³',
    'mopas',
    'moras',
    'mores',
    'moros',
    'morro',
    'morÃ¡s',
    'morÃ©s',
    'MoscÃº',
    'motas',
    'moved',
    'mozas',
    'moÃ±os',
    'mucas',
    'mucos',
    'mudas',
    'mudos',
    'mudÃ¡s',
    'mueve',
    'mugen',
    'muges',
    'mugid',
    'mugiÃ³',
    'mugÃ­s',
    'mujan',
    'mujas',
    'mulas',
    'multe',
    'multÃ¡',
    'multÃ©',
    'muros',
    'musas',
    'musÃ¡s',
    'nabos',
    'naces',
    'nacÃ©s',
    'nadas',
    'nades',
    'nadÃ©s',
    'narre',
    'narrÃ©',
    'natas',
    'natos',
    'Nauru',
    'NaurÃº',
    'naves',
    'nazca',
    'nazis',
    'necia',
    'Nepal',
    'netos',
    'nexos',
    'niÃ±os',
    'nomos',
    'notas',
    'notes',
    'notÃ¡s',
    'notÃ©s',
    'nubes',
    'nucas',
    'nudas',
    'nudos',
    'nulas',
    'nulos',
    'NÃ­ger',
    'obras',
    'odias',
    'odios',
    'odiÃ¡s',
    'odres',
    'ogros',
    'ollas',
    'omanÃ­',
    'ombÃºs',
    'ondas',
    'onzas',
    'opera',
    'operÃ¡',
    'optas',
    'optÃ¡s',
    'orbes',
    'orcas',
    'orden',
    'orinÃ¡',
    'ornan',
    'ornee',
    'orneÃ©',
    'oseas',
    'oseÃ¡s',
    'osito',
    'otras',
    'ovulo',
    'ovulÃ³',
    'oÃ­rte',
    'pacas',
    'pacen',
    'pacta',
    'pactÃ¡',
    'pactÃ³',
    'pacÃ©s',
    'pagan',
    'pague',
    'paguÃ©',
    'pajas',
    'pajes',
    'palas',
    'palme',
    'palmÃ¡',
    'palmÃ©',
    'palos',
    'palpa',
    'panes',
    'papÃºa',
    'papÃºs',
    'paras',
    'parda',
    'Pardo',
    'paree',
    'paren',
    'pares',
    'pareÃ©',
    'parta',
    'partÃ­',
    'parÃ¡s',
    'parÃ­a',
    'ParÃ­s',
    'parÃ­s',
    'pasas',
    'pasen',
    'pases',
    'paseÃ³',
    'pasÃ¡s',
    'pasÃ©s',
    'patas',
    'patea',
    'pateÃ¡',
    'patos',
    'patÃ©s',
    'pavos',
    'paÃ±al',
    'pecas',
    'peces',
    'pedos',
    'pegas',
    'pegue',
    'pelos',
    'penan',
    'penas',
    'penda',
    'pende',
    'penen',
    'penes',
    'pensÃ¡',
    'pensÃ©',
    'penÃ¡s',
    'penÃ©s',
    'peras',
    'perdÃ­',
    'peros',
    'pesad',
    'pesas',
    'pescÃ¡',
    'pesen',
    'peses',
    'pesos',
    'pesÃ¡s',
    'pesÃ©s',
    'petas',
    'petÃ¡s',
    'peÃ¡is',
    'peÃ±as',
    'pican',
    'picas',
    'picos',
    'picÃ¡s',
    'pidas',
    'pides',
    'pidÃ¡s',
    'pines',
    'pipas',
    'pisad',
    'pises',
    'pitan',
    'pitos',
    'playÃ¡',
    'plena',
    'pleno',
    'poblÃ³',
    'pocas',
    'pocos',
    'podas',
    'poded',
    'poder',
    'podes',
    'podrÃ¡',
    'podrÃ©',
    'podÃ¡s',
    'podÃ©s',
    'podÃ­a',
    'polos',
    'poned',
    'ponen',
    'poner',
    'pones',
    'ponga',
    'ponÃ©s',
    'ponÃ­a',
    'porfa',
    'poros',
    'posas',
    'posee',
    'posen',
    'poses',
    'poseÃ©',
    'posos',
    'posÃ¡s',
    'posÃ©s',
    'potos',
    'poyas',
    'poyÃ¡s',
    'pozos',
    'Prada',
    'prado',
    'prevÃ©',
    'preÃ±a',
    'preÃ±o',
    'preÃ±Ã¡',
    'preÃ±Ã³',
    'primÃ³',
    'probÃ³',
    'pueda',
    'puede',
    'puedo',
    'pujan',
    'pujas',
    'pujen',
    'pujÃ¡s',
    'pulen',
    'pumas',
    'puras',
    'purgÃ¡',
    'puros',
    'putas',
    'Qatar',
    'quede',
    'quedÃ©',
    'queme',
    'quemo',
    'quemÃ¡',
    'quemÃ©',
    'quemÃ³',
    'querÃ©',
    'quise',
    'quiso',
    'Quito',
    'quito',
    'quitÃ³',
    'rabiÃ¡',
    'rabos',
    'rabÃ³n',
    'ralbe',
    'ralbÃ©',
    'ramos',
    'ranas',
    'rapas',
    'rapÃ¡s',
    'raras',
    'raros',
    'rasas',
    'rasco',
    'rascÃ¡',
    'raspÃ¡',
    'rasÃ¡s',
    'ratas',
    'ratos',
    'razas',
    'razÃ¡s',
    'raÃ©is',
    'reces',
    'recia',
    'recÃ©s',
    'redes',
    'regia',
    'regÃ­a',
    'reinÃ³',
    'rejas',
    'remas',
    'remes',
    'remos',
    'remÃ¡s',
    'remÃ©s',
    'renos',
    'rento',
    'rentÃ¡',
    'rentÃ³',
    'reses',
    'reste',
    'restÃ©',
    'restÃ³',
    'retes',
    'retos',
    'retÃ©s',
    'reyes',
    'rezan',
    'rezas',
    'rezÃ¡s',
    'reÃ­os',
    'reÃºna',
    'rices',
    'rifas',
    'rimas',
    'rimen',
    'rimes',
    'rimÃ¡s',
    'rimÃ©s',
    'rinda',
    'ritos',
    'roban',
    'robes',
    'robÃ©s',
    'rocas',
    'rodas',
    'rodÃ¡s',
    'rojas',
    'rojos',
    'roles',
    'rolla',
    'rollÃ¡',
    'rollÃ³',
    'romas',
    'romos',
    'rompa',
    'rompe',
    'rompÃ©',
    'rones',
    'rotas',
    'rotos',
    'rotÃ¡s',
    'royas',
    'royos',
    'royÃ¡s',
    'rubÃ­s',
    'rudos',
    'rueis',
    'rugen',
    'ruges',
    'rugiÃ³',
    'rugÃ­s',
    'rujan',
    'rulos',
    'runas',
    'rusas',
    'Rusia',
    'rusos',
    'rutas',
    'ruÃ©is',
    'ruÃ±as',
    'ruÃ±Ã¡s',
    'sabia',
    'sabÃ­a',
    'sacan',
    'sacas',
    'sacos',
    'sacra',
    'sacÃ¡s',
    'sajÃ³n',
    'sakes',
    'saldÃ³',
    'salga',
    'salgo',
    'salgÃ¡',
    'salgÃ³',
    'salta',
    'saltÃ¡',
    'saltÃ³',
    'salva',
    'salve',
    'salvÃ¡',
    'salvÃ©',
    'salvÃ³',
    'salÃ­s',
    'Samoa',
    'sanad',
    'sanas',
    'sanos',
    'santa',
    'sanÃ¡s',
    'sapos',
    'saudÃ­',
    'saÃ±as',
    'sebos',
    'secan',
    'sedad',
    'sedan',
    'sedas',
    'seden',
    'sedes',
    'sedÃ¡s',
    'sedÃ©s',
    'sentÃ¡',
    'sentÃ©',
    'sentÃ³',
    'sepas',
    'sepÃ¡s',
    'seres',
    'seria',
    'seriÃ¡',
    'serrÃ³',
    'serÃ¡n',
    'serÃ¡s',
    'serÃ­a',
    'setas',
    'sexos',
    'seÃ±Ã¡s',
    'siega',
    'siego',
    'sigan',
    'Siria',
    'siria',
    'siseo',
    'sitÃºo',
    'soban',
    'sobas',
    'sobes',
    'sobrÃ©',
    'sobÃ©s',
    'sogas',
    'Solas',
    'solas',
    'soles',
    'solos',
    'solÃ©s',
    'solÃ­a',
    'somos',
    'sonad',
    'sonar',
    'sondÃ¡',
    'sonÃ¡s',
    'sopas',
    'soplo',
    'soplÃ³',
    'sopÃ¡s',
    'sorbe',
    'sorbÃ©',
    'soÃ±ad',
    'soÃ±ar',
    'soÃ±Ã¡s',
    'soÃ±Ã©s',
    'subas',
    'subes',
    'sucia',
    'sucre',
    'sudan',
    'sudar',
    'sudas',
    'sudes',
    'SudÃ¡n',
    'tabas',
    'tabÃºs',
    'tacos',
    'talas',
    'talÃ¡s',
    'talÃ©s',
    'tapas',
    'tapen',
    'tapes',
    'tapÃ¡s',
    'tapÃ©s',
    'tardÃ©',
    'Tegus',
    'Tejas',
    'tejas',
    'telas',
    'temas',
    'temen',
    'temes',
    'temÃ¡s',
    'temÃ©s',
    'tened',
    'tenga',
    'tengo',
    'tenia',
    'tensa',
    'tensÃ¡',
    'tensÃ³',
    'tenÃ©s',
    'tenÃ­a',
    'terca',
    'tersa',
    'terse',
    'tersÃ¡',
    'tersÃ©',
    'tersÃ³',
    'testo',
    'testÃ¡',
    'testÃ³',
    'tetar',
    'tetas',
    'tetÃ¡s',
    'Texas',
    'teÃ±Ã­a',
    'tiene',
    'times',
    'timÃ©s',
    'tipos',
    'tiras',
    'tiros',
    'tirÃ¡s',
    'tisÃºs',
    'titÃ¡n',
    'tocÃ¡s',
    'todas',
    'todos',
    'togas',
    'togÃ¡s',
    'tomad',
    'toman',
    'tomas',
    'tomes',
    'tomÃ¡s',
    'tomÃ©s',
    'Tonga',
    'tonos',
    'tonta',
    'topas',
    'topos',
    'topÃ¡s',
    'toquÃ©',
    'torpe',
    'tosed',
    'toses',
    'traed',
    'traen',
    'traer',
    'traes',
    'tragÃ¡',
    'trajo',
    'tramÃ¡',
    'tratÃ³',
    'traÃ©s',
    'traÃ­a',
    'trinÃ³',
    'trocÃ³',
    'tronÃ³',
    'trotÃ©',
    'trÃ­os',
    'tubos',
    'Tulio',
    'tumbÃ¡',
    'tunas',
    'tunÃ¡s',
    'tÃ³lar',
    'TÃºnez',
    'untes',
    'unÃ­as',
    'urbes',
    'urdas',
    'Uribe',
    'urnas',
    'usaos',
    'usate',
    'usÃ©is',
    'uÃ±oso',
    'vacan',
    'vacas',
    'vados',
    'vagas',
    'vagos',
    'vague',
    'vaguÃ©',
    'vagÃ¡s',
    'vales',
    'valga',
    'valgo',
    'valsa',
    'valse',
    'valsÃ¡',
    'valsÃ©',
    'valÃ©s',
    'vamos',
    'vasca',
    'vasos',
    'vasta',
    'vates',
    'vayan',
    'vayas',
    'vayÃ¡s',
    'veces',
    'vecÃ©s',
    'vedas',
    'velas',
    'velen',
    'veles',
    'velos',
    'velÃ¡s',
    'velÃ©s',
    'vemos',
    'venas',
    'vendÃ©',
    'vengo',
    'vengÃ³',
    'vente',
    'ventÃ©',
    'Verde',
    'veros',
    'verÃ¡s',
    'verÃ­a',
    'vetas',
    'vetos',
    'veÃ­an',
    'veÃ­as',
    'viajÃ©',
    'vidas',
    'viene',
    'viera',
    'vigas',
    'viles',
    'vinos',
    'vires',
    'vivÃ¡s',
    'voces',
    'volar',
    'volvÃ­',
    'volÃ¡s',
    'votad',
    'votan',
    'votar',
    'votas',
    'voten',
    'votes',
    'votos',
    'votÃ¡s',
    'votÃ©s',
    'vudÃºs',
    'vÃ­deo',
    'wikis',
    'wones',
    'yates',
    'yemas',
    'Yemen',
    'yendo',
    'yenes',
    'yesca',
    'yogur',
    'yugos',
    'zacas',
    'zarca',
    'zares',
    'zedas',
    'zetas',
    'zonas',
    'zorro',
    'zulÃºs',
    'zurda',
    'zurro']


function elegirPalabraAlAzar(listaPalabras) {
  return listaPalabras[Math.floor(Math.random() * listaPalabras.length)]
}

let palabraGanadora = elegirPalabraAlAzar(listaPalabras);
let arrayPalabraGanadora = palabraGanadora.split("");

function tabular(e) {
  let obj = e.target
  let frm = obj.form;
  let largo = obj.value.length;
  let tam = obj.maxLength;
  if (largo == tam) {
    for (i = 0; i < frm.elements.length; i++) {
      if (frm.elements[i] == obj) {
        if (i == frm.elements.length - 1) { i = -1; }
        break;
      }
    }
    frm.elements[i + 1].focus();
    return false;
  }
}

function hideBtn() {
  document.getElementById("nueva-partida").style.display = "none";
  document.getElementById("cargar-partida").style.display = "none";
  document.getElementById("guardar-partida").style.display = "inline-block";
  document.getElementById("timer").style.display = "block";
  document.getElementById("time").style.display = "inline";
}

function showBtn() {
  document.getElementById("volver-jugar-partida").style.display = "inline-block";
  document.getElementById("guardar-partida").style.display = "none";
  document.getElementById("mensaje-resultado").style.display = "inline-block";
  document.getElementById("time").style.display = "none";
  document.getElementById("timer").style.display = "none";
}

// SETEA E INICIA EL TIMER
function timer() {
  let tresminutos = 60 * 5,
    display = document.querySelector("#time");
  startTimer(tresminutos, display);
}

function startTimer(duration, display) {
  let timer = duration, minutes, seconds;
  let reloj = setInterval(function () {
    minutes = parseInt(timer / 60, 10);
    seconds = parseInt(timer % 60, 10);

    minutes = minutes < 10 ? "0" + minutes : minutes;
    seconds = seconds < 10 ? "0" + seconds : seconds;

    display.textContent = minutes + ":" + seconds;

    if (gameOver) {
      clearInterval(reloj);
    }

    if (--timer < 0) {
      gameOver = true;
      timer = duration;
      showBtn();
      document.getElementById("mensaje-resultado").innerHTML = `TermnÃ³ el tiempo`;
      bloqueoFieldset();
    }
  }, 1000);
}


window.onload = function () {
  console.log(palabraGanadora)

  let inputsForm = document.getElementById("grilla").querySelectorAll("input");

  inputsForm.forEach(function (x) {
    x.addEventListener("keyup", tabular);
  })

  const nuevaPartida = document.getElementById("nueva-partida");
  const volverAJugar = document.getElementById("volver-jugar-partida");
  const gurdarPartida = document.getElementById("guardar-partida");
  const rankingPartida = document.getElementById("ranking-partida");
  const cargarPartida = document.getElementById("cargar-partida");

  const form = document.getElementById("formulario-usuario");
  const name = document.getElementById("nombre-jugador-input");

  const ordenFecha = document.getElementById("orden-por-fecha");
  const ordenPuntaje = document.getElementById("orden-por-puntaje");
  const numeroPartida = document.getElementById("numero-partida");

  form.addEventListener("submit", function (e) {
    e.preventDefault();

    let regexName = new RegExp("^[A-Za-z]+$");
    let nameValue = name.value;
    let regexValue = regexName.test(nameValue);

    if (name.value.length < 3 || regexValue === false || name.value === "") {
      errorNombre.innerHTML = "Ingrese un nombre mayor a 2 digitos. Solo letras sin espacios."
      return false;
    } else {
      document.getElementById("nombre-jugador").style.display = "none";
      gameOver = false;
      inicio();
      timer();
      hideBtn();
      document.getElementById("fila0").disabled = false;
      document.getElementById("f0c0").focus();
    }
  })

  nuevaPartida.addEventListener("click", function () {
    document.getElementById("nombre-jugador").style.display = "flex";
    name.focus();
  })

  volverAJugar.addEventListener("click", function () {
    gameOver = false;
    location.reload();
  })

  gurdarPartida.addEventListener("click", function () {
    GuardaProgreso();
  })

  rankingPartida.addEventListener("click", function () {
    ordenPuntaje.style.display = "table-cell"
    numeroPartida.style.display = "none"
    ObtenerScore();
    mostrarModal();

    ordenFecha.addEventListener("click", function () {
      ObtenerScore();
    })

    ordenPuntaje.addEventListener("click", function () {
      ordenaTablaP();
    })
  })

  cargarPartida.addEventListener("click", function () {
    document.getElementById("nombre-jugador").style.display = "none";
    ordenPuntaje.style.display = "none"
    numeroPartida.style.display = "table-cell"
    ObtenerGuardadas();
    mostrarModal();

    ordenFecha.addEventListener("click", function () {
      ObtenerGuardadas();
    })
  })

  // modal

  function mostrarModal() {
    let modal = document.getElementById("modalPartidas");
    let span = document.getElementById("close");

    
    modal.style.display = "block";

    // cerrar modal
    span.onclick = function () {
      modal.style.display = "none";
    }

    // cerrar modal, click afuera
    window.onclick = function (event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }
  }
}  